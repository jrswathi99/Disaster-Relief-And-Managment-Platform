/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.SecurityOfficer;

import ui.LogisticsManager.*;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.SecurityResourceManager;
import model.ResourceRequest;
import roles.SecurityOfficer;
import roles.DisasterCoordinator;
import ui.MedicalOfficer.MedicalOfficerJPanel;

/**
 *
 * @author DELL
 */
public class SecurityOfficerJPanel extends javax.swing.JPanel {
        
    private DisasterCoordinator disasterCoordinator;
    private SecurityOfficer securityOfficer;
    private SecurityResourceManager securityResourceManager;
   
    private JPanel userProcessContainer;
    /**
     * Creates new form LogisticsJPanel
     */
    public SecurityOfficerJPanel(JPanel userProcessContainer,SecurityOfficer securityOfficer,DisasterCoordinator disasterCoordinator, SecurityResourceManager securityResourceManager ) {
         this.securityOfficer = securityOfficer;
        this.securityResourceManager = securityResourceManager;
        this.userProcessContainer=userProcessContainer;
        this.disasterCoordinator=disasterCoordinator;
        initComponents();
        populateRequestsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtResourceType = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnaddresource = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblAvailableResources = new javax.swing.JTable();
        btnfullfillrequest = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Security Officer work area");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Resource Type");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Quantity");

        btnaddresource.setBackground(new java.awt.Color(0, 0, 0));
        btnaddresource.setForeground(new java.awt.Color(255, 255, 255));
        btnaddresource.setText("Add Resource");
        btnaddresource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddresourceActionPerformed(evt);
            }
        });

        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Resource ID", "Resource Type", "Quantity", "Status"
            }
        ));
        jScrollPane3.setViewportView(tblRequests);

        tblAvailableResources.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Resource Type", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblAvailableResources);

        btnfullfillrequest.setBackground(new java.awt.Color(0, 0, 0));
        btnfullfillrequest.setForeground(new java.awt.Color(255, 255, 255));
        btnfullfillrequest.setText("Fullfill Request");
        btnfullfillrequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfullfillrequestActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Resources");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Pending Requests");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1238, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnaddresource)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtResourceType)
                                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(149, 149, 149))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnfullfillrequest)
                        .addGap(220, 220, 220)))
                .addGap(344, 344, 344))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtResourceType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnaddresource)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnfullfillrequest)
                .addGap(69, 69, 69))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnaddresourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddresourceActionPerformed
       String resourceType = txtResourceType.getText().trim();
    int quantity;
    try {
        quantity = Integer.parseInt(txtQuantity.getText().trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid quantity. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (resourceType.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Resource type cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    securityOfficer.addResource(securityResourceManager, resourceType, quantity);
    JOptionPane.showMessageDialog(this, "Resource added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

    // Refresh the Resources table
    populateResourcesTable();
    }//GEN-LAST:event_btnaddresourceActionPerformed

    private void btnfullfillrequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfullfillrequestActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();
    if (selectedRow < 0) {
        JOptionPane.showMessageDialog(this, "No request selected. Please select a request to fulfill.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String requestId = (String) tblRequests.getValueAt(selectedRow, 0);
    int quantity = (int) tblRequests.getValueAt(selectedRow, 2);

    boolean success = securityOfficer.fulfillRequest(securityResourceManager, requestId, quantity);
    if (success) {
        JOptionPane.showMessageDialog(this, "Request fulfilled successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

      

        // Notify Medical Officer
        
    } else {
        JOptionPane.showMessageDialog(this, "Unable to fulfill the request. Insufficient resources.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    // Refresh the tables
    populateRequestsTable();
    populateResourcesTable();
    }//GEN-LAST:event_btnfullfillrequestActionPerformed

    private void addResource() {
        String resourceType = txtResourceType.getText();
        int quantity;
        try {
            quantity = Integer.parseInt(txtQuantity.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid quantity.");
            return;
        }
        securityOfficer.addResource(securityResourceManager, resourceType, quantity);
        populateResourcesTable();
    }

    private void fulfillRequest() {
        int selectedRow = tblRequests.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "No request selected.");
            return;
        }
        String requestId = (String) tblRequests.getValueAt(selectedRow, 0);
        int quantity = (int) tblRequests.getValueAt(selectedRow, 2);
        securityOfficer.fulfillRequest(securityResourceManager, requestId, quantity);
        populateRequestsTable();
        populateResourcesTable();
    }

    private void populateResourcesTable() {
        DefaultTableModel model = (DefaultTableModel) tblAvailableResources.getModel();
        model.setRowCount(0);
        for (String resourceType : securityResourceManager.listAvailableResources().keySet()) {
            model.addRow(new Object[]{resourceType, securityResourceManager.getAvailableQuantity(resourceType)});
        }
    }

    private void populateRequestsTable() {
        DefaultTableModel model = (DefaultTableModel) tblRequests.getModel();
        model.setRowCount(0);
        for (ResourceRequest request : securityResourceManager.getAllRequests()) {
            if (request.getStatus().equals("Pending")) {
                model.addRow(new Object[]{request.getId(), request.getResourceType(), request.getQuantityRequested(), request.getStatus()});
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnaddresource;
    private javax.swing.JButton btnfullfillrequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable tblAvailableResources;
    private javax.swing.JTable tblRequests;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtResourceType;
    // End of variables declaration//GEN-END:variables
}
